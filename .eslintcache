[{"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/index.js":"1","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/App.js":"2","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/reportWebVitals.js":"3","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/views/Login.js":"4","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/views/Home.js":"5","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/ToggleButton.js":"6","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/AppRouter.js":"7","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/AppHeader.js":"8","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/CardList.js":"9","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/ClipBoardModal.js":"10"},{"size":500,"mtime":1606630090938,"results":"11","hashOfConfig":"12"},{"size":826,"mtime":1606811785210,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606630090938,"results":"14","hashOfConfig":"12"},{"size":107,"mtime":1606642426630,"results":"15","hashOfConfig":"12"},{"size":168,"mtime":1606741068930,"results":"16","hashOfConfig":"12"},{"size":503,"mtime":1606645215030,"results":"17","hashOfConfig":"12"},{"size":749,"mtime":1606741653430,"results":"18","hashOfConfig":"12"},{"size":2046,"mtime":1606834443510,"results":"19","hashOfConfig":"12"},{"size":1714,"mtime":1606829469660,"results":"20","hashOfConfig":"12"},{"size":2314,"mtime":1606835446760,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14x3nln",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/index.js",[],["49","50"],"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/App.js",["51","52"],"import React, { useState } from \"react\";\nimport { Layout } from \"antd/lib\";\n\nimport \"./App.css\";\nimport AppHeader from \"./components/AppHeader\";\nimport AppRouter from \"./AppRouter\";\nconst demo = [\n  {\n    title: \"Title 1\",\n  },\n  {\n    title: \"Title 2\",\n  },\n  {\n    title: \"Title 3\",\n  },\n  {\n    title: \"Title 4\",\n  },\n  {\n    title: \"Title 5\",\n  },\n  {\n    title: \"Title 6\",\n  },\n];\n\nconst App = () => {\n  const { Header, Content, Footer } = Layout;\n  const [data, setData] = useState(demo);\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <AppHeader setData={setData} data={data} />\n        <Content style={{ padding: \"0 10px\", marginTop: 64, height: \"100%\" }}>\n          <AppRouter setData={setData} data={data} />\n        </Content>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/reportWebVitals.js",[],["53","54"],"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/views/Login.js",[],["55","56"],"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/views/Home.js",[],"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/ToggleButton.js",["57"],"import React from \"react\";\nimport { Radio, Button } from \"antd\";\n\nexport default class ToggleButton extends React.Component {\n  state = {\n    darkMode: false,\n  };\n\n  changeTheme = () => {\n    this.setState({\n      darkMode: !this.state.darkMode,\n    });\n  };\n\n  render() {\n    return (\n        <Button\n          type=\"primary\"\n          onClick={this.changeTheme}\n          style={{ marginTop: 16 }}\n        >\n          {this.state.darkMode ? \"Light Mode\" : \"Dark Mode\"}\n        </Button>\n    );\n  }\n}\n","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/AppRouter.js",[],"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/AppHeader.js",["58","59"],"import React from \"react\";\nimport { Menu, Switch } from \"antd\";\nimport { UserOutlined, PlusCircleTwoTone } from \"@ant-design/icons\";\nimport { Row, Col } from \"antd\";\n\nimport ClipBoardModal from \"./ClipBoardModal\";\nimport ToggleButton from \"./ToggleButton\";\nconst { SubMenu } = Menu;\n\nexport default class AppHeader extends React.Component {\n  state = {\n    current: \"mail\",\n    themeMode: \"light\",\n  };\n\n  handleClick = (e) => {\n    switch (e.key) {\n      case \"enterText\":\n        let oldList2 = this.props.data;\n        this.props.setData(\n          oldList2.concat({\n            title: \"Title enterText\",\n          })\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  changeTheme = (e) => {\n    this.setState({ themeMode: e.value ? \"dark\" : \"light\" });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <Row>\n        <Col span={6}>\n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n            theme={this.state.themeMode}\n            style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n          >\n            <SubMenu\n              key=\"SubMenu\"\n              icon={<UserOutlined />}\n              title=\" Welcome, Vigneshwaran\"\n            >\n              <Menu.Item key=\"setting:1\">Edit Profile</Menu.Item>\n              <Menu.Item key=\"setting:2\">Logout</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Col>\n        <Col span={6} offset={12}>\n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n            theme={this.state.themeMode}\n            style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n          >\n            <SubMenu key=\"SubMenu\" icon={<PlusCircleTwoTone />}>\n              <Menu.Item key=\"addFromClip\">\n                <ClipBoardModal />\n              </Menu.Item>\n              <Menu.Item key=\"enterText\">Enter Text</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Col>\n      </Row>\n    );\n  }\n}\n","/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/CardList.js",["60","61","62","63","64"],"/home/rv/lab/project-Enclipy/frontend/enclipy-react-app/src/components/ClipBoardModal.js",["65"],"import { Modal, Button } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\n\nexport default function ClipBoardModal(props) {\n  const { TextArea } = Input;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [clipBoardText, setclipBoardText] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  navigator.clipboard\n    .readText()\n    .then((text) => {\n      setclipBoardText(text);\n      console.log(text);\n      // let oldList = this.props.data;\n      // this.props.setData(\n      //   oldList.concat({\n      //     title: text,\n      //   })\n      // );\n      // console.log(oldList);\n    })\n    .catch((err) => {\n      console.log(err);\n      setError(true);\n    });\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      setVisible(false);\n    }, 3000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n  const onChange = ({ target: { value } }) => {\n    console.log(\"v\" + value);\n    setclipBoardText(value);\n  };\n  let insideContent;\n  if (error) {\n    insideContent = <p>Some Error Occuerd</p>;\n  } else {\n    insideContent = (\n      <TextArea\n        value={clipBoardText}\n        onChange={onChange}\n        autoSize={{ minRows: 3, maxRows: 15 }}\n      />\n    );\n  }\n  useEffect(() => {\n    if (error) {\n      insideContent = <p>Some Error Occuerd</p>;\n    } else {\n      insideContent = (\n        <TextArea\n          value={clipBoardText}\n          onChange={onChange}\n          autoSize={{ minRows: 3, maxRows: 15 }}\n        />\n      );\n    }\n  }, [clipBoardText]);\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Add data from Clipboard\n      </Button>\n      <Modal\n        visible={visible}\n        title=\"Title\"\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"back\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            loading={loading}\n            onClick={handleOk}\n          >\n            Add this Clip\n          </Button>,\n        ]}\n      >\n        {insideContent}\n      </Modal>\n    </>\n  );\n}\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":29,"column":11,"nodeType":"72","messageId":"73","endLine":29,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":29,"column":28,"nodeType":"72","messageId":"73","endLine":29,"endColumn":34},{"ruleId":"66","replacedBy":"75"},{"ruleId":"68","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"70","severity":1,"message":"79","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":15},{"ruleId":"70","severity":1,"message":"80","line":2,"column":16,"nodeType":"72","messageId":"73","endLine":2,"endColumn":22},{"ruleId":"70","severity":1,"message":"81","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":20},{"ruleId":"70","severity":1,"message":"82","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":13},{"ruleId":"70","severity":1,"message":"83","line":3,"column":15,"nodeType":"72","messageId":"73","endLine":3,"endColumn":18},{"ruleId":"70","severity":1,"message":"84","line":35,"column":9,"nodeType":"72","messageId":"73","endLine":35,"endColumn":20},{"ruleId":"70","severity":1,"message":"85","line":40,"column":7,"nodeType":"72","messageId":"73","endLine":40,"endColumn":18},{"ruleId":"70","severity":1,"message":"86","line":41,"column":9,"nodeType":"72","messageId":"73","endLine":41,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":62,"column":23,"nodeType":"89","endLine":62,"endColumn":48},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Header' is assigned a value but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.",["90"],["91"],["90"],["91"],"'Radio' is defined but never used.","'Switch' is defined but never used.","'ToggleButton' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'decryptText' is assigned a value but never used.","'encryptText' is assigned a value but never used.","'encrypted_data' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'insideContent' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","JSXElement","no-global-assign","no-unsafe-negation"]